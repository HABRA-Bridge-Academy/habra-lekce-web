
services:
  mongo:
    image: mongo
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/habra --quiet
      interval: 5s
      timeout: 10s
      retries: 30
    volumes:
      - mongo-data:/data/db/
      - ./dev/mongod.conf:/etc/mongod.conf  
    command: ["mongod", "--config", "/etc/mongod.conf"]
    user: "mongodb"
    logging:
      driver: none

  backend-dev:
    build: ./backend 
    ports:
      - '3000:3000'
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app/
    environment:
      - DATABASE_URI=mongodb://mongo:27017/habra
      - PAYLOAD_SECRET=495499533ce7bfd1ceb3e4c2
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 5s
      timeout: 10s
      retries: 30
      start_period: 10s
  
  frontend:
    build: ./frontend
    environment:
      - VITE_API_URL=/api/
      - PROXY_API_URL=http://backend-dev:3000
    ports:
      - "8081:8081"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      backend-dev:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 5s
      timeout: 10s
      retries: 50
      start_period: 10s

  welcome-service:
    image: alpine
    depends_on:
      backend-dev:
        condition: service_healthy
      mongo:
        condition: service_healthy
      frontend:
        condition: service_healthy
    command: >
      /bin/sh -c "
        echo 'Welcome to Habra Lekce!'
        echo 'Frontend runs on http://localhost:8081'
        echo 'Backend runs on http://localhost:3000/'
        echo '  - API runs on http://localhost:3000/api/'
        echo '    - API docs run on http://localhost:3000/api-docs'
        echo '    - You can also have a look at Payload REST API docs at https://payloadcms.com/docs/rest-api/overview'
        echo '      Payload is the content management system used as a backend in this project.'
        echo '  - Admin panel runs on http://localhost:3000/admin'
        echo '  - If started for the first time, visit the admin panel to create an admin user.'
        echo 'Frontend and backend should function with hot reload'
        echo '  - any changes to the code should be reflected in the browser without restart.'
        echo 'MongoDB is up but the service is not exposed.'
        echo '  - You can use mongosh to connect to the database, just make sure to run it in the mongo service container.'
        echo '  - The database is named "habra".'
        echo 'All services are now healthy and running successfully.'
        echo 'Enjoy your development!'
      "

  data-importer:
    image: mongo
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./dev/articles.json:/articles.json
      - ./dev/mongo-import.sh:/mongo-import.sh
    command: ["/bin/sh", "/mongo-import.sh"]
    restart: "no"

  # create-admin-user:
  #   build: ./backend
  #   command: node bin/createAdminUser
  #   depends_on:
  #     backend:
  #       condition: service_started
  #   environment:
  #     - NODE_ENV=development
  #     - ENV=development
  #     - MONGO_URL=mongodb://mongo:27017/habra
  #     - SECRET=trumpisgay
  #     - ADMIN_PASSWORD=admin
  #     - ADMIN_EMAIL=admin
  #   volumes:
  #     - ./backend:/usr/src/app
  #     - /usr/src/app/node_modules

  # test:
  #   build: ./backend
  #   environment:
  #     - NODE_ENV=test
  #     - MONGO_URL=mongodb://mongo:27017/matrika
  #     - DB_URL=mysql://matrika:matrika@mysql:3306/matrika
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     mysql:
  #       condition: service_healthy
  #   command: npm run test  --inspect-brk=0.0.0.0
  #   ports:
  #     - "9229:9229"
  #   volumes:
  #     - ./backend:/usr/src/app
  #     - /usr/src/app/node_modules

volumes:
  mongo-data:
