---
- name: Create deployment 
  hosts: all
  vars:
    # config per deployment
    # configure in inventory.yaml
    # deployment_name: 'staging'
    # web_domain: '{{ deployment_name }}.habra.cz'
    # backend_port: 3004
    # support_www: false
    # db_name: "habra"
    # db_url: "mongodb://localhost:27017/{{ db_name }}"
    # notification_email: "{{ lookup('env', 'NOTIFICATION_EMAIL') }}"
    # git_ref: 'main'
    # repo_url: 'test'
    # dev_mode: "true"

    # static config
    web_url: 'https://{{ web_domain }}' 
    vps_home: "/home/habra/{{ deployment_name }}"
    log_dir: "/var/log/habra/{{ deployment_name }}"
    # 


  tasks:
    - name: Display web domain 
      debug:
        var: web_domain 

    - name: Mark the repository as a safe directory for Git
      command: git config --global --add safe.directory "{{ vps_home }}"
      become: yes  

    - name: Pull latest changes if repository exists
      git:
        repo: "{{ repo_url }}"
        dest: "{{ vps_home }}"
        version: "{{ git_ref }}"
        accept_hostkey: yes
        force: yes  # This forces a pull if there are any local changes


    - name: Ensure correct ownership of the repository directory
      file:
        path: "{{ vps_home }}"
        owner: "habra"
        recurse: yes

    - name: get git version
      shell: git rev-parse HEAD
      args:
        chdir: "{{ vps_home }}"
      register: git_version

    - name: Add environment information to backend
      template:
        src: "backend.env.j2"
        dest: "{{ vps_home }}/backend/.env"
      become: yes
      become_user: habra
      
    - name: Install backend dependencies
      shell: pnpm install
      args:
        chdir: "{{ vps_home }}/backend"
      become: yes 
      become_user: habra

    - name: Build backend
      shell: pnpm build
      args:
        chdir: "{{ vps_home }}/backend"
      become: yes
      become_user: habra

    - name: restart PM2 process
      command: pm2 restart habra-api-{{ deployment_name }} 
      become: yes
      become_user: habra

  handlers:
    - name: Restart Cron
      service:
        name: cron
        state: restarted
